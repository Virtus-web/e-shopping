import { useState, useEffect } from 'react'
import '../styles/cart.css'

function Cart({cart, updateCart}) {
    //Plusieurs solutions mais la plus simple est de d√©clarer les variables d'√©tat √† la suite
    const [isOpen, setIsOpen] = useState(true)
    const total = cart.reduce((acc, plantType) => acc + plantType.amount * plantType.price, 0)//Ici on calcule le prix du panier

    // alert(`J'aurai ${total}‚Ç¨ √† payer üí∏`)
    // useEffect(() => {
    //     alert(`J'aurai ${total}‚Ç¨ √† payer üí∏`)
    // })

    // useEffect(() => {
    //     alert(`J'aurai ${total}‚Ç¨ √† payer üí∏`)
    // }, [total])

    useEffect(() => {//Change le nom de l'onglet
		document.title = `LMJ: ${total}‚Ç¨ d'achats`
	}, [total])

    //On enl√®ve ces prix car il y a maintenant un prix par plante dans les data
    // const monsteraPrice = 8
    // const ivyPrice = 10
    // const flowerPrice = 15

    //Important ici, On fait passer le param√®tre correspondant √† la modification du useful statement via la technique de gestion des √©v√©nements ( sans rien ou via un param√®tre et une fonction interm√©diaire anonyme, ou encore un bind) 

    //Donc ici on r√©cup√®re la variable d'√©tat d√©clar√©e dans App et r√©cup√©r√©e ici via props destructur√©s, correspondant √† un tableau vide √† la base et r√©cup√©rant les plantes ajout√©es dans le panier cart, ensuite on le map quand on veut d√©tailler le panier et le prix de chaque plante, et on utilise reduce plus haut pour n'avoir que les cat√©gories achet√©es
    return isOpen ? (
        <div className='lmj-cart'>
            <button className='lmj-cart-toggle-button' onClick={() => setIsOpen(false)}>Fermer</button>
            {cart.length > 0 ? (
                <div>
                    <h2>Panier</h2>
                    <ul>
						{cart.map(({ name, price, amount }, index) => (
							<div key={`${name}-${index}`}>
								{name} {price}‚Ç¨ x {amount}
							</div>
						))}
					</ul>
                    <h3>Total :{total}‚Ç¨</h3>
                    <button onClick={() => updateCart([])}>Vider le panier</button>
                </div>
            ) : (
				<div>Votre panier est vide</div>
			)}
        </div>
    ) : (
        <div className='lmj-cart-closed'>
            <button className='lmj-cart-toggle-button' onClick={() => setIsOpen(true)}>Ouvrir le panier</button>
        </div>
    )
}

export default Cart